<Window x:Class="VisitorsRegistrationSystemBeheerGUI.Windows.BedrijfFormWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VisitorsRegistrationSystemBeheerGUI.Windows"
        mc:Ignorable="d"
        Title="BedrijfFormWindow" Height="360" Width="380" ResizeMode="NoResize"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"  WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="MyWaterMarkStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="White" BorderBrush="LightGray" BorderThickness="1"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                            <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border CornerRadius="5" BorderThickness="1" Background="GhostWhite" BorderBrush="LightGray">  
        <Grid Margin="5">
            <Grid.Resources>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Margin" Value="0,5,0,5"/>
                </Style>
                <Style TargetType="{x:Type GroupBox}">
                    <Setter Property="Margin" Value="0,0,0,10"/>
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <GroupBox Header="Bedrijf" Grid.Row="0">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="Naam"/>
                        <TextBox x:Name="txtbNaam" Width="280"/>
                    </StackPanel>
            
                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="VAT"/>
                        <TextBox x:Name="txtbVAT" Width="280"/>
                    </StackPanel>
            
                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="Email"/>
                        <TextBox x:Name="txtbEmail" Width="280"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="TelNr"/>
                        <TextBox x:Name="txtbTelNr" Width="280"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Adres" Grid.Row="1">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="Straat"/>
                        <TextBox x:Name="txtbStraat" Width="160"/>
                        
                        <Label Width="30" Content="Nr"/>
                        <TextBox x:Name="txtbHuisnummer" Width="30"/>

                        <Label Width="30" Content="Bus"/>
                        <TextBox x:Name="txtbBusnummer" Width="30"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="Postcode"/>
                        <TextBox x:Name="txtbPostcode" Width="70"/>

                        <Label Width="40" Content="Stad"/>
                        <TextBox x:Name="txtbGemeente" Width="170"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="2">
                
                <Button x:Name="btnOpslaan" Content="Opslaan" Width="150" Padding="2" Margin="5" Height="25" Foreground="DarkGreen" Background="White" Click="btnOpslaan_Click" >
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"></Setter>
                        </Style>
                    </Button.Resources>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDefaulted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkGreen"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkGreen"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkGreen"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="btnAfsluiten" Content="Afsluiten"  Width="150" Padding="2" Margin="5" Height="25" Foreground="DarkRed" Background="White" Click="btnAfsluiten_Click" >
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"></Setter>
                        </Style>
                    </Button.Resources>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDefaulted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkRed"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkRed"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkRed"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                
            </StackPanel>
        </Grid>
    </Border>
</Window>
