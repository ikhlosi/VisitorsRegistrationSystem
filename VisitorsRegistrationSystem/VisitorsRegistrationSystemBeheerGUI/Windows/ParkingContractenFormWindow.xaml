<Window x:Class="VisitorsRegistrationSystemBeheerGUI.Windows.ParkingContractenFormWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VisitorsRegistrationSystemBeheerGUI.Windows" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="ParkingContractenFormWindow" Height="240" Width="380"
    WindowStyle="None" AllowsTransparency="True" Background="Transparent"  WindowStartupLocation="CenterScreen">
    <Border CornerRadius="5" BorderThickness="1" Background="GhostWhite" BorderBrush="LightGray">
        <Grid Margin="5">

            <Grid.RowDefinitions>
                <RowDefinition Height="190" />
                <RowDefinition Height="45" />
            </Grid.RowDefinitions>

            <GroupBox Header="ParkingContract" Grid.Row="0">
                <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Bedrijf" Width="100"/>
                        <TextBox x:Name="cmbBedrijf" Height="25" Width="250" VerticalAlignment="Center" />
                    </StackPanel>

                    <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                        <Label Content="Plaatsen" Width="100"/>
                        <TextBox x:Name="txtbPlaatsen" Height="25" Width="250" VerticalAlignment="Center"/>
                    </StackPanel>
                    
                    <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                        <Label Content="Start Contract" Width="100"/>
                        <xctk:DateTimePicker x:Name="dtpStartContract" ShowButtonSpinner="False" TimePickerShowButtonSpinner="False" Format="Custom" FormatString="dd MMMM yyyy HH:mm:ss" Height="25" Width="250" VerticalAlignment="Center"/>
                    </StackPanel>

                    <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                        <Label Content="Eind Contract" Width="100"/>
                        <xctk:DateTimePicker x:Name="dtpEindContract" ShowButtonSpinner="False" TimePickerShowButtonSpinner="False" Format="Custom" FormatString="dd MMMM yyyy HH:mm:ss" Height="25" Width="250" VerticalAlignment="Center" />
                    </StackPanel>

                    <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                        <Label Content="Parking" Width="100"/>
                        <TextBox x:Name="txtbParking" Height="25" Width="250" VerticalAlignment="Center" />
                    </StackPanel>

                </StackPanel>
            </GroupBox>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1">

                <Button x:Name="btnOpslaan" Content="Opslaan" Width="150" Padding="2" Margin="5" Height="25" Foreground="DarkGreen" Background="White" Click="btnOpslaan_Click" >
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"></Setter>
                        </Style>
                    </Button.Resources>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDefaulted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkGreen"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkGreen"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkGreen"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="btnAfsluiten" Content="Afsluiten"  Width="150" Padding="2" Margin="5" Height="25" Foreground="DarkRed" Background="White" Click="btnAfsluiten_Click" >
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"></Setter>
                        </Style>
                    </Button.Resources>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDefaulted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkRed"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkRed"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                                                <Setter Property="Background" TargetName="border" Value="DarkRed"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

            </StackPanel>

        </Grid>
    </Border>
</Window>
